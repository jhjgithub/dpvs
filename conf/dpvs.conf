!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! This is dpvs default configuration file.
!
! The attribute "<init>" denotes the configuration item at initialization stage. Item of
! this type is configured oneshoot and not reloadable. If invalid value configured in the
! file, dpvs would use its default value.
!
! Note that dpvs configuration file supports the following comment type:
!   * line comment: using '#" or '!'
!   * inline range comment: using '<' and '>', put comment in between
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! global config
global_defs {
!    log_level   WARNING
    log_level   DEBUG
!    log_file    /var/log/dpvs.log
}

! netif config
netif_defs {
    <init> pktpool_size     524287
    <init> pktpool_cache    256

    <init> device dpdk0 {
        rx {
            queue_number        1
            descriptor_number   1024
            rss                 tcp
        }
        tx {
            queue_number        1
            descriptor_number   1024
        }
    !    promisc_mode
        kni_name                dpdk0
    }

    <init> device dpdk1 {
        rx {
            queue_number        1
            descriptor_number   1024
            rss                 tcp
        }
        tx {
            queue_number        1
            descriptor_number   1024
        }
    !    promisc_mode
        kni_name                dpdk1
    }
}

! worker config (lcores)
worker_defs {
    <init> worker cpu0 {
        type    master
        cpu_id  0
    }

    <init> worker cpu1 {
        type    slave
        cpu_id  1
        port    dpdk0 {
            rx_queue_ids     0
            tx_queue_ids     0
            ! isol_rx_cpu_ids  9
            ! isol_rxq_ring_sz 1048576
        }
        port    dpdk1 {
            rx_queue_ids     0
            tx_queue_ids     0
            ! isol_rx_cpu_ids  9
            ! isol_rxq_ring_sz 1048576
        }
    }
}

! timer config
timer_defs {
    # cpu job loops to schedule dpdk timer management
    #schedule_interval    500
    schedule_interval    1
}

! dpvs neighbor config
neigh_defs {
    <init> unres_queue_length  128
    <init> timeout             60
}

! dpvs ipv4 config
ipv4_defs {
    <init> ipv4_forward on   ! set this to on, dpvs will forward packets that NOT hit rules directly 
    <init> default_ttl         64
    fragment {
        <init> bucket_number   1024
        <init> bucket_entries  16
        <init> max_entries     1024
        <init> ttl             1
    }
}

! control plane config
ctrl_defs {
    lcore_msg {
        <init> ring_size                1024
        <init> multicast_queue_length   256
        sync_msg_timeout_us             2000
    }
    ipc_msg {
        <init> unix_domain /var/run/dpvs_ctrl
    }
}

! ipvs config
ipvs_defs {
    conn {
        <init> conn_pool_size       1024
        <init> conn_pool_cache      128
        conn_init_timeout           3
    !    expire_quiescent_template
    !    fast_xmit_close
    }

    udp {
        defence_udp_drop
        timeout {
            normal      300
            last        3
        }
    }

    tcp {
        defence_tcp_drop
        timeout {
            none        2
            established 90
            syn_sent    3
            syn_recv    30
            fin_wait    7
            time_wait   7
            close       3
            close_wait  7
            last_ack    7
            listen      120
            synack      30
            last        2
        }
        synproxy {
            synack_options {
                mss             1452
                ttl             63
                sack
            !    wscale
            !    timestamp
            }
        !    defer_rs_syn
            rs_syn_max_retry    3
            ack_storm_thresh    10
            max_ack_saved       3
            conn_reuse_state {
                close
                time_wait
            !    fin_wait
            !    close_wait
            !    last_ack
           }
        }
    }
}

! sa_pool config
sa_pool {
    pool_hash_size   16
}

